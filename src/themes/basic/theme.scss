@import 'compass';
@import 'compass/css3/opacity';
@import 'compass/reset';

@import '../../../.tmp/gen/themes/basic/grunticon/pictograms';

//
// Variables definition
//

$font_color:  rgba(76, 76, 76, 1);

$device_state_border_width: 2px;
$device_state_border_color: rgba(154, 207, 7, 0.8);
$device_state_border_focused_color: rgba(154, 207, 7, 1);
$device_state_fill_color: rgba(154, 207, 7, 0.2);
$device_state_fill_focused_color: rgba(154, 207, 7, 0.5);

$program_state_disabled_color: rgba(207, 60, 0, 0.3);
$program_state_disabled_focused_color: rgba(207, 60, 0, 0.6);
$program_state_enabled_color: rgba(154, 207, 7, 0.3);
$program_state_enabled_focused_color: rgba(154, 207, 7, 0.6);
$program_state_invalid_color: rgba(105, 105, 105, 0.3);
$program_state_invalid_focused_color: rgba(105, 105, 105, 0.6);

$status_border_width: 2px;
$status_connection_border_color: rgba(154, 207, 7, 0.8);
$status_connection_border_focused_color: rgba(154, 207, 7, 1);
$status_problem_border_color: rgba(206, 96, 39, 0.80);
$status_problem_border_focused_color: rgba(206, 96, 39, 1);
$status_disconnection_border_color: rgba(206, 66, 66, 0.80);
$status_disconnection_border_focused_color: rgba(206, 66, 66, 1);

$focusline_color: rgba(105, 105, 105, 0.5);

//
// Layout definition
//

html, body {
    height: 100%;
}

.dashboard {
    display: block;
    height: 100%;
    overflow: auto;
    overflow-x: hidden;
    overflow-y: auto;
    color: $font_color;

    .rule {
        z-index: 1000;
        position: absolute;
        display: block;
        top: 0px;
        height: 100%;
        width: 30px;
        background-color: #e0e0e0;
        @include opacity(0.2);

        &:hover {
            @include opacity(0.7);
        }

        .line {
            position: absolute;
            top: 0px;
            bottom: 0px;
            left: 50%;
            width: 1px;
            background-color: #696969;
        }
    }

    .container {
        .group {
            position: relative;
        }

        .element {
            &:nth-child(odd) {
                background-color: #f1f1f1;
            }
            &:nth-child(even) {
                background-color: #fafafa;
            }

            .placeholder.aside {
                position: absolute;
                z-index: 500;
            }

            .placeholder.sidebar {
                .title {
                    float: left;
                }
                .picto {
                    display: block;
                    float: right;
                    text-align: center;
                }
            }
        }
    }

    .container, footer {
        .element {
            position: relative;
            overflow: hidden;

            .placeholder {
                float: left;
            }
        }
    }

    footer {

    }
}

//
// D3 definition
//

.axis path,
.axis line {
    fill: none;
    stroke: black;
    shape-rendering: crispEdges;
}

.axis.top {
    background-image: linear-gradient(top, #fff 0%, rgba(255, 255, 255, 0) 100%);
    background-image: -o-linear-gradient(top, #fff 0%, rgba(255, 255, 255, 0) 100%);
    background-image: -moz-linear-gradient(top, #fff 0%, rgba(255, 255, 255, 0) 100%);
    background-image: -webkit-linear-gradient(top, #fff 0%, rgba(255, 255, 255, 0) 100%);
    background-image: -ms-linear-gradient(top, #fff 0%, rgba(255, 255, 255, 0) 100%);
    top: 0px;
    padding: 0 0 24px 0;
}

.axis.bottom {
    background-image: linear-gradient(bottom, #fff 0%, rgba(255, 255, 255, 0) 100%);
    background-image: -o-linear-gradient(bottom, #fff 0%, rgba(255, 255, 255, 0) 100%);
    background-image: -moz-linear-gradient(bottom, #fff 0%, rgba(255, 255, 255, 0) 100%);
    background-image: -webkit-linear-gradient(bottom, #fff 0%, rgba(255, 255, 255, 0) 100%);
    background-image: -ms-linear-gradient(bottom, #fff 0%, rgba(255, 255, 255, 0) 100%);
    bottom: 0px;
    padding: 24px 0 0 0;
}

.axis text {
    font-family: sans-serif;
    font-size: 11px;
}

.area {
    fill: $device_state_fill_color;
    stroke-width: 0;

    .focused {
        fill: $device_state_fill_focused_color;
    }
}

.program {
    .disabled {
        fill: $program_state_disabled_color;
    }
    .disabled.focused {
        fill: $program_state_disabled_focused_color;
    }
    .enabled {
        fill: $program_state_enabled_color;
    }
    .enabled.focused {
        fill: $program_state_enabled_focused_color;
    }
    .invalid {
        fill: $program_state_invalid_color;
    }
    .invalid.focused {
        fill: $program_state_invalid_focused_color;
    }
}

.status {
    line {
        stroke-width: $status_border_width;
    }

    .connection {
        stroke: $status_connection_border_color;
    }
    .connection.focused {
        stroke: $status_connection_border_focused_color;
    }
    .problem {
        stroke: $status_problem_border_color;
    }
    .problem.focused {
        stroke: $status_problem_border_focused_color;
    }
    .disconnection {
        stroke: $status_disconnection_border_color;
    }
    .disconnection.focused {
        stroke: $status_disconnection_border_focused_color;
    }
}

.focusline rect {
    fill: $focusline_color;
}

.border {
    stroke: $device_state_border_color;
    stroke-width: $device_state_border_width;
    shape-rendering: crispEdges;
    fill: transparent;
}

.border.pending {
    stroke-linecap: 'square';
    stroke-dasharray: 1, 2;
}

.spikes {
    line {
        stroke-width: $device_state_border_width;
        stroke: $device_state_border_color;
    }

    .focused {
        stroke-width: $device_state_border_width * 1.5;
        stroke: $device_state_border_focused_color;
    }
}

.decoration {
    cursor: pointer;
    stroke-width: 1;
    z-index: 1000;
    stroke: rgba(255, 255, 255, 0.5);
    @include filter(drop-shadow(-5px -5px 5px #000));
}